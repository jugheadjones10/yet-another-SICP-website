"use strict";(self.webpackChunksicp_docu=self.webpackChunksicp_docu||[]).push([[817],{7474:function(a,e){e.Z={repo:"jugheadjones10/yet-another-SICP-website",repoId:"MDEwOlJlcG9zaXRvcnkzOTc3NzgwODE=",category:"General",categoryId:"DIC_kwDOF7Wcoc4B-2HB",mapping:"pathname",reactionsEnabled:"0",emitMetadata:"0",theme:"light"}},3642:function(a,e,n){n.r(e),n.d(e,{frontMatter:function(){return i},contentTitle:function(){return o},metadata:function(){return c},toc:function(){return N},default:function(){return d}});var t=n(7462),s=n(3366),m=(n(7294),n(3905)),r=n(7870),p=n(7474),l=["components"],i={},o="Exercise 2.1",c={unversionedId:"chapter-2/intro-to-data-abstraction/section-2.1",id:"chapter-2/intro-to-data-abstraction/section-2.1",isDocsHomePage:!1,title:"Exercise 2.1",description:'`scheme title="Code from the text"',source:"@site/docs/chapter-2/intro-to-data-abstraction/section-2.1.mdx",sourceDirName:"chapter-2/intro-to-data-abstraction",slug:"/chapter-2/intro-to-data-abstraction/section-2.1",permalink:"/chapter-2/intro-to-data-abstraction/section-2.1",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/chapter-2/intro-to-data-abstraction/section-2.1.mdx",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"exercise-2.24",permalink:"/chapter-2/intro-to-data-abstraction/exercise-2.24"},next:{title:"Exercise 2.1",permalink:"/chapter-2/intro-to-data-abstraction/template"}},N=[{value:"Exercise 2.2",id:"exercise-22",children:[]},{value:"Exercise 2.3",id:"exercise-23",children:[]},{value:"Exercise 2.4",id:"exercise-24",children:[]},{value:"Exercise 2.5",id:"exercise-25",children:[]},{value:"Exercise 2.6",id:"exercise-26",children:[]},{value:"Exercise 2.7",id:"exercise-27",children:[]},{value:"Exercise 2.8",id:"exercise-28",children:[]},{value:"Exercise 2.9",id:"exercise-29",children:[]},{value:"Exercise 2.10",id:"exercise-210",children:[]},{value:"Exercise 2.11",id:"exercise-211",children:[]},{value:"Exercise 2.12",id:"exercise-212",children:[]},{value:"Exercise 2.13",id:"exercise-213",children:[]}],k={toc:N};function d(a){var e=a.components,n=(0,s.Z)(a,l);return(0,m.kt)("wrapper",(0,t.Z)({},k,n,{components:e,mdxType:"MDXLayout"}),(0,m.kt)("h1",{id:"exercise-21"},"Exercise 2.1"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-scheme",metastring:'title="Code from the text"',title:'"Code',from:!0,the:!0,'text"':!0},'(define (numer x) (car x))\n(define (denom x) (cdr x))\n(define (make-rat n d)\n  (let ((g (gcd n d)))\n    (cons (/ n g) (/ d g))))\n\n(define (print-rat x)\n  (newline)\n  (display (numer x))\n  (display "/")\n  (display (denom x)))\n')),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-scheme",metastring:'title="My answer"',title:'"My','answer"':!0},'(define (make-rat n d)\n  (let ((g (gcd n d)))\n    (let ((abs-n (abs (/ n g)))\n          (abs-d (abs (/ d g))))\n      (cond ((< 0 (* n d)) (cons abs-n abs-d))\n            ((> 0 (* n d)) (cons (- abs-n) abs-d))\n            (else (error "Cannot accept 0 for numerator or denominator"))))))\n')),(0,m.kt)("h3",{id:"exercise-22"},"Exercise 2.2"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-scheme",metastring:'title="Code from the text"',title:'"Code',from:!0,the:!0,'text"':!0},'(define (print-point p)\n  (newline)\n  (display "(")\n  (display (x-point p))\n  (display ",")\n  (display (y-point p))\n  (display ")"))\n')),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-scheme",metastring:'title="My answer"',title:'"My','answer"':!0},";Segments library\n(define (make-segment start-point end-point)\n  (cons start-point end-point))\n(define (start-segment segment) (car segment))\n(define (end-segment segment) (cdr segment))\n\n;Points library\n(define (make-point x y)\n  (cons x y))\n(define (x-point p) (car p))\n(define (y-point p) (cdr p))\n\n(define (midpoint-segment seg)\n  (let ((start-seg (start-segment seg))\n        (end-seg (end-segment seg)))\n    (make-point (/ (+ (x-point start-seg) (x-point end-seg)) 2)\n                (/ (+ (y-point start-seg) (y-point end-seg)) 2))))\n")),(0,m.kt)("p",null,'I\'m a bit conflicted about passing in points into "make-segment". Shouldn\'t the user of make-segment be unaware that the underlying implementation of segments are points? Instead of 2 points, maybe "make-segment" should accept 4 numbers (the x and y coordinates of the 2 points).'),(0,m.kt)("p",null,"But then again, by passing in the coordinates of points, am I not making an assumption about the implementation of points? They could very well be implemented in terms of angles and magnitudes, not x and y coordinates. In other words, I might be making an even worse abstraction error, since x and y coordinates are 2 levels down the abstraction ladder while segments are only one level down. I guess it's a general rule - you can't create something without knowing anything about its implementation.  "),(0,m.kt)("h3",{id:"exercise-23"},"Exercise 2.3"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-scheme",metastring:'title="My answer"',title:'"My','answer"':!0},";Addition to points library\n(define (distance-between-points p1 p2)\n  (sqrt (+ (square (- (y-point p1) (y-point p2)))\n           (square (- (x-point p1) (x-point p2))))))\n\n;Addition to segments library\n(define (get-segment-length segment)\n  (let ((p1 (start-segment segment))\n        (p2 (end-segment segment)))\n    (distance-between-points p1 p2)))\n\n;First rectangles implementation\n(define (make-rectangle breadth-segment length-segment)\n  (cons breadth-segment length-segment))\n(define (get-breadth rectangle)\n  (get-segment-length (car rectangle)))\n(define (get-length rectangle)\n  (get-segment-length (cdr rectangle)))\n\n;Now we construct the get-area and get-perimeter procedures. \n;These procedures are one abstraction level above rectangles.\n;In a more general system they should get the area and perimeter of any shape, \n;but here let us assume rectangles are the only shapes that exist.\n\n(define (get-area rectangle)\n  (* (get-breadth rectangle) (get-length rectangle)))\n(define (get-perimeter rectangle)\n  (+ (* 2 (get-breadth rectangle))\n     (* 2 (get-length rectangle))))\n\n;Tests\n(define (test-area-and-perimeter)\n  (let ((breadth-segment (make-segment (make-point 0 0) (make-point 5 0)))\n        (length-segment (make-segment (make-point 0 0) (make-point 0 5))))\n    (let ((rectangle (make-rectangle breadth-segment length-segment)))\n      (check (get-area rectangle) => 25)\n      (check (get-perimeter rectangle) => 20))))\n\n;The alternate implementation of rectangles below skips the segment abstraction and directly uses points.\n(define (make-rectangle top-left top-right bottom-left bottom-right)\n  (list top-left top-right bottom-left bottom-right))\n(define (get-breadth rectangle)\n  (min (distance-between-points (car rectangle) (cadr rectangle))\n       (distance-between-points (car rectangle) (caddr rectangle))))\n(define (get-length rectangle)\n  (max (distance-between-points (car rectangle) (cadr rectangle))\n       (distance-between-points (car rectangle) (caddr rectangle))))\n\n;Tests\n(define (test-area-and-perimeter)\n  (let ((rectangle (make-rectangle (make-point 0 5) (make-point 3 5) (make-point 0 0) (make-point 3 0))))\n    (check (get-area rectangle) => 15)\n    (check (get-perimeter rectangle) => 16)))\n")),(0,m.kt)("h3",{id:"exercise-24"},"Exercise 2.4"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-scheme",metastring:'title="My answer"',title:'"My','answer"':!0},";Verifying that car works the way it should.\n(define (verify-car)\n  (equal? (car (cons 1 2)) 1))\n\n;Defining an analogous cdr.\n(define (cdr z)\n  (z (lambda(p q) q)))\n(define (verify-cdr)\n  (equal? (cdr (cons 1 2)) 2))\n")),(0,m.kt)("h3",{id:"exercise-25"},"Exercise 2.5"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-scheme",metastring:'title="My answer"',title:'"My','answer"':!0},"(define (cons a b)\n  (* (expt 2 a) (expt 3 b)))\n\n(define (car x)\n  (define (car-iter count val)\n    (if (equal? (modulo val 2) 0)\n        (car-iter (+ count 1) (/ val 2))\n        count))\n  (car-iter 0 x))\n\n(define (cdr x)\n  (define (car-iter count val)\n    (if (equal? (modulo val 3) 0)\n        (car-iter (+ count 1) (/ val 3))\n        count))\n  (car-iter 0 x))\n")),(0,m.kt)("h3",{id:"exercise-26"},"Exercise 2.6"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-scheme",metastring:'title="Code from the text"',title:'"Code',from:!0,the:!0,'text"':!0},"(define zero (lambda (f) (lambda (x) x)))\n\n(define (add-1 n)\n  (lambda (f) (lambda (x) (f ((n f) x)))))\n")),(0,m.kt)("p",null,"Let's follow the hint and try simplifying this monster."),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-scheme",metastring:'title="My answer"',title:'"My','answer"':!0},"(add-1 zero)\n(lambda (f) (lambda (x) (f (((lambda (f) (lambda (x) x)) f) x))))\n(lambda (f) (lambda (x) (f ((lambda (x) x) x))))\n(lambda (f) (lambda (x) (f x)))\n\n;Here we see that zero means the function f is applied\n;to x 0 times, one means it is applied one time, and so on.\n\n(define one (lambda (f) (lambda (x) (f x))))\n(define two (lambda (f) (lambda (x) (f (f x)))))\n(define (add a b)\n  (lambda (f)\n    (lambda (x)\n      ((a f) ((b f) x)))))\n")),(0,m.kt)("h3",{id:"exercise-27"},"Exercise 2.7"),(0,m.kt)("p",null,"The below code from the text applies for exercises 2.7-2.16, which are all part of the interval arithmetic extended exercise."),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-scheme",metastring:'title="Code from the text"',title:'"Code',from:!0,the:!0,'text"':!0},"(define (add-interval x y)\n  (make-interval (+ (lower-bound x) (lower-bound y))\n                 (+ (upper-bound x) (upper-bound y))))\n\n(define (mul-interval x y)\n  (let ((p1 (* (lower-bound x) (lower-bound y)))\n        (p2 (* (lower-bound x) (upper-bound y)))\n        (p3 (* (upper-bound x) (lower-bound y)))\n        (p4 (* (upper-bound x) (upper-bound y))))\n    (make-interval (min p1 p2 p3 p4)\n                   (max p1 p2 p3 p4))))\n\n(define (div-interval x y)\n  (mul-interval x \n                (make-interval (/ 1.0 (upper-bound y))\n                               (/ 1.0 (lower-bound y)))))\n\n(define (make-interval a b) (cons a b))\n")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-scheme",metastring:'title="My answer"',title:'"My','answer"':!0},"(define (upper-bound x) (cdr x))\n(define (lower-bound x) (car x))\n")),(0,m.kt)("h3",{id:"exercise-28"},"Exercise 2.8"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-scheme",metastring:'title="My Answer"',title:'"My','Answer"':!0},"(define (sub-interval x y)\n  (make-interval (- (lower-bound x) (upper-bound y))\n                 (- (upper-bound x) (lower-bound y))))\n")),(0,m.kt)("h3",{id:"exercise-29"},"Exercise 2.9"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-scheme",metastring:'title="My Answer"',title:'"My','Answer"':!0},";Not going to go much into this because it's sort of obvious. Just play around with the procedures you have so far.\n")),(0,m.kt)("h3",{id:"exercise-210"},"Exercise 2.10"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-scheme",metastring:'title="My Answer"',title:'"My','Answer"':!0},'(define (div-interval x y)\n  (if (or (< (lower-bound y) 0) (< (upper-bound y) 0))\n      (error "Division error (y spans 0)")\n      (mul-interval\n       x\n       (make-interval (/ 1.0 (upper-bound y))\n                      (/ 1.0 (lower-bound y))))))\n')),(0,m.kt)("h3",{id:"exercise-211"},"Exercise 2.11"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-scheme",metastring:'title="My Answer"',title:'"My','Answer"':!0},'(define (new-mul-interval x y)\n  (let ((x-lower (lower-bound x))\n        (x-upper (upper-bound x))\n        (y-lower (lower-bound y))\n        (y-upper (upper-bound y)))\n    (define (check-interval-signs interval pred1 pred2)\n      (and (pred1 (lower-bound interval) 0) (pred2 (upper-bound interval) 0)))\n    (define (-+? interval) (check-interval-signs interval < >))\n    (define (++? interval) (check-interval-signs interval > >))\n    (define (--? interval) (check-interval-signs interval < <))\n    (cond ((-+? x)\n            (cond ((-+? y)\n                    (make-interval (min (* x-lower y-upper) (* x-upper y-lower))\n                                   (max (* x-lower y-lower) (* x-upper y-upper))))\n                   ((++? y)\n                    (make-interval (* x-lower y-upper)\n                                   (* x-upper y-upper)))\n                   ((--? y)\n                    (make-interval (* x-upper y-lower)\n                                   (* x-lower y-lower)))))\n           ((++? x)\n            (cond ((-+? y)\n                    (make-interval (* x-upper y-lower)\n                                   (* x-upper y-upper)))\n                  ((++? y)\n                   (make-interval (* x-lower y-lower)\n                                  (* x-upper y-upper)))\n                  ((--? y)\n                   (make-interval (* x-upper y-lower)\n                                  (* x-lower y-upper)))))\n           ((--? x)\n            (cond ((-+? y)\n                    (make-interval (* x-lower y-upper)\n                                   (* x-lower y-lower)))\n                   ((++? y)\n                    (make-interval (* x-lower y-upper)\n                                   (* x-upper y-lower)))\n                   ((--? y)\n                    (make-interval (* x-upper y-upper)\n                                   (* x-lower y-lower))))))))\n\n(define (eql-interval? a b)\n   (and (= (upper-bound a) (upper-bound b))\n        (= (lower-bound a) (lower-bound b))))\n\n(define (ensure-mult-works aL aH bL bH)\n  (if (and (>= aH aL) (>= bH bL))\n      (let ((a (make-interval aL aH))\n            (b (make-interval bL bH)))\n        (if (eql-interval? (mul-interval a b)\n                           (new-mul-interval a b))\n            (begin\n              (display (list "New mult works for: " a b))\n              (newline))\n            (begin\n              (error "New mult returns different value!"\n                     a\n                     b\n                     (mul-interval a b)\n                     (new-mul-interval a b))\n              (newline))))))\n\n(define (check-new-mult-all-possibilities)\n  (define (check-recur arg)\n    (if (= (length arg) 4)\n        (apply ensure-mult-works arg)\n        (begin (check-recur (append arg (list 1)))\n               (check-recur (append arg (list -1))))))\n  (check-recur \'()))\n')),(0,m.kt)("p",null,'Run "check-new-mult-all-possibilities" to test the function for all 9 possibilities.'),(0,m.kt)("h3",{id:"exercise-212"},"Exercise 2.12"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-scheme",metastring:'title="Code from the text"',title:'"Code',from:!0,the:!0,'text"':!0},"(define (make-center-width c w)\n  (make-interval (- c w) (+ c w)))\n\n(define (center i)\n  (/ (+ (lower-bound i) (upper-bound i)) 2))\n\n(define (width i)\n  (/ (- (upper-bound i) (lower-bound i)) 2))\n")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-scheme",metastring:'title="My Answer"',title:'"My','Answer"':!0},"(define (make-center-percent center percent)\n  (let ((width (abs (* center (/ percent 100)))))\n    (make-interval (- center width)\n                   (+ center width))))\n\n(define (percent center-percent)\n  (* 100\n     (/ (width center-percent) (center center-percent))))\n")),(0,m.kt)("h3",{id:"exercise-213"},"Exercise 2.13"),(0,m.kt)("p",null,"Let's try multiplying two positive intervals with small percentage tolerances : ","\n"),(0,m.kt)("div",{className:"math math-display"},(0,m.kt)("span",{parentName:"div",className:"katex-display"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mo",{parentName:"mrow"},"\xb1"),(0,m.kt)("mn",{parentName:"mrow"},"0.05"),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mo",{parentName:"mrow"},"\xb1"),(0,m.kt)("mn",{parentName:"mrow"},"0.03"),(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"(x \\pm 0.05x)(y \\pm 0.03y)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\xb1"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"5"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\xb1"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"3"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,m.kt)("p",null,"The lower bound of the product can be obtained by multiplying the lower bounds of both intervals."),(0,m.kt)("div",{className:"math math-display"},(0,m.kt)("span",{parentName:"div",className:"katex-display"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"0.05"),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"0.03"),(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"0.03"),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"0.05"),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"0.05"),(0,m.kt)("mo",{parentName:"mrow"},"\u22c5"),(0,m.kt)("mn",{parentName:"mrow"},"0.03"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mi",{parentName:"mrow"},"y")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"(x - 0.05x)(y - 0.03y) = xy - 0.03xy - 0.05xy + (0.05 \\cdot 0.03)xy")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"5"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"3"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.7777700000000001em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8388800000000001em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"3"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8388800000000001em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"5"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"5"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u22c5"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"3"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y")))))),(0,m.kt)("p",null,"The upper bound can be obtained analogously."),(0,m.kt)("div",{className:"math math-display"},(0,m.kt)("span",{parentName:"div",className:"katex-display"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"0.05"),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"0.03"),(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mo",{parentName:"mrow"},"="),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"0.03"),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"0.05"),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"0.05"),(0,m.kt)("mo",{parentName:"mrow"},"\u22c5"),(0,m.kt)("mn",{parentName:"mrow"},"0.03"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mi",{parentName:"mrow"},"y")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"(x + 0.05x)(y + 0.03y) = xy + 0.03xy + 0.05xy + (0.05 \\cdot 0.03)xy")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"5"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"3"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},"="),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.7777700000000001em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8388800000000001em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"3"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8388800000000001em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"5"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"5"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u22c5"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"3"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y")))))),(0,m.kt)("p",null,"Ignoring ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"0.05"),(0,m.kt)("mo",{parentName:"mrow"},"\u22c5"),(0,m.kt)("mn",{parentName:"mrow"},"0.03"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mi",{parentName:"mrow"},"y")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"(0.05\\cdot0.03)xy")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"5"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u22c5"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"3"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y")))))," because it's small, we can simplify the lower and upper bounds to:"),(0,m.kt)("div",{className:"math math-display"},(0,m.kt)("span",{parentName:"div",className:"katex-display"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"L"),(0,m.kt)("mi",{parentName:"mrow"},"o"),(0,m.kt)("mi",{parentName:"mrow"},"w"),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mi",{parentName:"mrow"},"r"),(0,m.kt)("mo",{parentName:"mrow"},":"),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"0.05"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"0.03"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mspace",{parentName:"mrow",linebreak:"newline"}),(0,m.kt)("mi",{parentName:"mrow"},"U"),(0,m.kt)("mi",{parentName:"mrow"},"p"),(0,m.kt)("mi",{parentName:"mrow"},"p"),(0,m.kt)("mi",{parentName:"mrow"},"e"),(0,m.kt)("mi",{parentName:"mrow"},"r"),(0,m.kt)("mo",{parentName:"mrow"},":"),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mi",{parentName:"mrow"},"y"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mn",{parentName:"mrow"},"0.05"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mn",{parentName:"mrow"},"0.03"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mi",{parentName:"mrow"},"y")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"Lower: xy - (0.05 + 0.03)xy\\\\ Upper: xy + (0.05 + 0.03)xy")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02691em"}},"w"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},":"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.7777700000000001em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"5"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"3"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y")),(0,m.kt)("span",{parentName:"span",className:"mspace newline"}),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8777699999999999em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"U"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"p"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"p"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,m.kt)("span",{parentName:"span",className:"mrel"},":"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.7777700000000001em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"5"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"."),(0,m.kt)("span",{parentName:"span",className:"mord"},"0"),(0,m.kt)("span",{parentName:"span",className:"mord"},"3"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"y")))))),(0,m.kt)("p",null,"We can conclude that the ",(0,m.kt)("strong",{parentName:"p"},"approximate")," percentage tolerance of the product is equal to the sum of the percentage tolerances of the factor intervals."),(0,m.kt)(r.d,{repo:p.Z.repo,repoId:p.Z.repoId,category:p.Z.category,categoryId:p.Z.categoryId,mapping:p.Z.mapping,reactionsEnabled:p.Z.reactionsEnabled,emitMetadata:p.Z.emitMetadata,theme:p.Z.theme,mdxType:"Giscus"}))}d.isMDXComponent=!0}}]);